COMPILE;
DIRECTORY MASTER;

MODULE ADDRESS;

INPUTS	DDB_0,DDB_1,DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,DDB_8,PD_0,PD_1,PD_2,PD_3,PD_4,
   PD_5,PD_6,PD_7,PD_8,ASEL_0,ASEL_1,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,A_9,CLK,
   DQCLK,RESETL,IXWRL,IXRDL,TRARDL,INTRALDL;
OUTPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DA_0,DA_1,DA_2,DA_3,DA_4,
   DA_5,DA_6,DA_7,DA_8,DAL_0,DAL_1,DAL_2,DAL_3,DAL_4,DAL_5,DAL_6,DAL_8;
LEVEL FUNCTION;
DEFINE

/* The IX register */


LOADIX_(LOADIX) = NR2C(IXWRL,DQCLK);
IXREG_0_(IX_0,IXL_0) = LD1A(DDB_0,LOADIX);
IXREG_1_(IX_1,IXL_1) = LD1A(DDB_1,LOADIX);
IXREG_2_(IX_2,IXL_2) = LD1A(DDB_2,LOADIX);
IXREG_3_(IX_3,IXL_3) = LD1A(DDB_3,LOADIX);
IXREG_4_(IX_4,IXL_4) = LD1A(DDB_4,LOADIX);
IXREG_5_(IX_5,IXL_5) = LD1A(DDB_5,LOADIX);
IXREG_6_(IX_6,IXL_6) = LD1A(DDB_6,LOADIX);
IXREG_7_(IX_7,IXL_7) = LD1A(DDB_7,LOADIX);
IXREG_8_(IX_8,IXL_8) = LD1A(DDB_8,LOADIX);
READIX_0_(DD_0) = BTS5B(IXL_0,IXRD);
READIX_1_(DD_1) = BTS5B(IXL_1,IXRD);
READIX_2_(DD_2) = BTS5B(IXL_2,IXRD);
READIX_3_(DD_3) = BTS5B(IXL_3,IXRD);
READIX_4_(DD_4) = BTS5B(IXL_4,IXRD);
READIX_5_(DD_5) = BTS5B(IXL_5,IXRD);
READIX_6_(DD_6) = BTS5B(IXL_6,IXRD);
READIX_7_(DD_7) = BTS5B(IXL_7,IXRD);
READIX_8_(DD_8) = BTS5B(IXL_8,IXRD);
IXRD_(IXRD) = N1C(IXRDL);
/* The Intrude address register */

INTRA_0_(INTRA_0,INTRAL_0) = LD2A(A_1,INTRALDL);
INTRA_1_(INTRA_1,INTRAL_1) = LD2A(A_2,INTRALDL);
INTRA_2_(INTRA_2,INTRAL_2) = LD2A(A_3,INTRALDL);
INTRA_3_(INTRA_3,INTRAL_3) = LD2A(A_4,INTRALDL);
INTRA_4_(INTRA_4,INTRAL_4) = LD2A(A_5,INTRALDL);
INTRA_5_(INTRA_5,INTRAL_5) = LD2A(A_6,INTRALDL);
INTRA_6_(INTRA_6,INTRAL_6) = LD2A(A_7,INTRALDL);
INTRA_7_(INTRA_7,INTRAL_7) = LD2A(A_8,INTRALDL);
INTRA_8_(INTRA_8,INTRAL_8) = LD2A(A_9,INTRALDL);
READINTRA_0_(DD_0) = BTS5B(INTRAL_0,TRARD);
READINTRA_1_(DD_1) = BTS5B(INTRAL_1,TRARD);
READINTRA_2_(DD_2) = BTS5B(INTRAL_2,TRARD);
READINTRA_3_(DD_3) = BTS5B(INTRAL_3,TRARD);
READINTRA_4_(DD_4) = BTS5B(INTRAL_4,TRARD);
READINTRA_5_(DD_5) = BTS5B(INTRAL_5,TRARD);
READINTRA_6_(DD_6) = BTS5B(INTRAL_6,TRARD);
READINTRA_7_(DD_7) = BTS5B(INTRAL_7,TRARD);
READINTRA_8_(DD_8) = BTS5B(INTRAL_8,TRARD);
TRARD_(TRARD) = N1C(TRARDL);

/* The address adder */

ADADDRESS_(IXA_0,IXA_1,IXA_2,IXA_3,IXA_4,IXA_5,IXA_6,IXA_7,IXA_8) = ADDER9(PD_0,
   PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,PD_8,IX_0,IX_1,IX_2,IX_3,IX_4,IX_5,IX_6,
   IX_7,IX_8);

/* The address multiplexer .. produces data address unlatched */

DAUN_0_(DAUN_0) = MUX3(PD_0,IXA_0,INTRA_0,ASEL_0,ASEL_1);
DAUN_1_(DAUN_1) = MUX3(PD_1,IXA_1,INTRA_1,ASEL_0,ASEL_1);
DAUN_2_(DAUN_2) = MUX3(PD_2,IXA_2,INTRA_2,ASEL_0,ASEL_1);
DAUN_3_(DAUN_3) = MUX3(PD_3,IXA_3,INTRA_3,ASEL_0,ASEL_1);
DAUN_4_(DAUN_4) = MUX3(PD_4,IXA_4,INTRA_4,ASEL_0,ASEL_1);
DAUN_5_(DAUN_5) = MUX3(PD_5,IXA_5,INTRA_5,ASEL_0,ASEL_1);
DAUN_6_(DAUN_6) = MUX3(PD_6,IXA_6,INTRA_6,ASEL_0,ASEL_1);
DAUN_7_(DAUN_7) = MUX3(PD_7,IXA_7,INTRA_7,ASEL_0,ASEL_1);
DAUN_8_(DAUN_8) = MUX3(PD_8,IXA_8,INTRA_8,ASEL_0,ASEL_1);

/* The pipeline latch */ 

DA_0_(DA_0,DAL_0) = FD2A(DAUN_0,CLK,RESETL);
DA_1_(DA_1,DAL_1) = FD2A(DAUN_1,CLK,RESETL);
DA_2_(DA_2,DAL_2) = FD2A(DAUN_2,CLK,RESETL);
DA_3_(DA_3,DAL_3) = FD2A(DAUN_3,CLK,RESETL);
DA_4_(DA_4,DAL_4) = FD2A(DAUN_4,CLK,RESETL);
DA_5_(DA_5,DAL_5) = FD2A(DAUN_5,CLK,RESETL);
DA_6_(DA_6,DAL_6) = FD2A(DAUN_6,CLK,RESETL);
DA_7_(DA_7,DAL_7) = FD2A(DAUN_7,CLK,RESETL);
DA_8_(DA_8,DAL_8) = FD2A(DAUN_8,CLK,RESETL);

END MODULE;

END COMPILE;
END;
