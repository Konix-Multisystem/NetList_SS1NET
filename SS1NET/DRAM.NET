COMPILE;
DIRECTORY MASTER;

MODULE DRAM;

INPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,
   DD_13,DD_14,DD_15,DA_0,DA_1,DA_2,DA_3,DA_4,DA_5,DA_6,DA_7,DA_8,DAL_4,DAL_5,
   DAL_6,DAL_8,READL,WRITEL,TRARDL,IXRDL,DAC,DMA1RDL,MZ2RDL,PCRDL,MODRDL,GPRDL,
   GPWRL,RESETL,CLK,DQCLK,INPUT;
OUTPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,
   DD_13,DD_14,DD_15,REGS,DRAMEN,DRAMWR,ROMEN,OUTPUT;
LEVEL FUNCTION;
DEFINE


CONSTS_(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,
   DD_13,DD_14,DD_15) = NCONST(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,
   DD_9,DD_10,DD_11,DD_12,DD_13,DD_14,DD_15,DA_0,DA_1,DA_2,DA_3,CONEN,RESETL,
   TRARDL,IXRDL,DMA1RDL,MZ2RDL,PCRDL,MODRDL,GPRDL,NOCONL);

OTHERS_(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6) = FILL(DD_0,DD_1,DD_2,DD_3,DD_4,
   DD_5,DD_6,DA_0,DA_1,DA_2,DA_3,DA_4,DA_5,DA_6,NOCON_3);
/* Address decoding .. such as it is .. for the DSP space */

DRAMEN_(DRAMEN) = NR2A(READL,RAMCSL);
DRAMWR_(DRAMWR) = NR3A(WRITEL,RAMCSL,DQCLK);
ROMEN_(ROMEN) = NR3A(READL,RESET,DA_8);
CONEN_(CONEN) = NR2A(CONSTL,READL);

RAMCSL_(RAMCSL) = ND2A(DA_7,DA_8);
CONST_(CONST) = NR5A(DAL_8,DA_4,DA_5,DA_6,DA_7);
CONSTL_(CONSTL) = N1A(CONST);
REGS_(REGS) = NR5A(DAL_8,DA_7,DAL_6,DA_4,DA_5);
/* Decode the unused space in memory map .. 10D to 13F.
   Also use this bus driver for DAC reads that are not implemented */

NOCON_0_(NOCON_0) = NR4A(DAL_8,DA_6,DA_7,DAL_5);
NOCON_1_(NOCON_1) = NR4A(DAL_8,DA_6,DA_7,DAL_4);
NOCON_2_(NOCON_2) = NR3A(DAC,NOCON_0,NOCON_1);
NOCON_3_(NOCON_3) = NR2C(READL,NOCON_2);
NOCONL_(NOCONL) = N1A(NOCON_3);
RESET_(RESET) = N1A(RESETL);

/* The general purpose IO pins */

GPWR_(GPWR) = NR2A(GPWRL,DQCLK);
GPRD_(GPRD) = N1A(GPRDL);
INPUT_(DD_0) = BTS4B(INPUT,GPRD);
OUTPUT_(OUTPUT,OUTPUTL) = LD1A(DD_0,GPWR);
END MODULE;


MODULE NCONST;

INPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,
   DD_13,DD_14,DD_15,A_0,A_1,A_2,A_3,CONEN,RESETL,TRARDL,IXRDL,DMA1RDL,MZ2RDL,
   PCRDL,MODRDL,GPRDL,NOCONL;
OUTPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,
   DD_13,DD_14,DD_15;

LEVEL FUNCTION;
DEFINE
/* Set all these fake locations to zero if reset or dsp reading a register */
/* First check for register read */

REGRD_(REGRD) = MACNAND7(TRARDL,IXRDL,DMA1RDL,MZ2RDL,PCRDL,MODRDL,GPRDL);
ZERO_(ZERO) = NR2C(RESET,REGRD);
RESET_(RESET) = N1A(RESETL);
DAL_0_(DAL_0) = ND2C(A_0,ZERO);
DAL_1_(DAL_1) = ND2C(A_1,ZERO);
DAL_2_(DAL_2) = ND2C(A_2,ZERO);
DAL_3_(DAL_3) = ND2C(A_3,ZERO);
DA_0_(DA_0) = N1C(DAL_0);
DA_1_(DA_1) = N1C(DAL_1);
DA_2_(DA_2) = N1C(DAL_2);
DA_3_(DA_3) = N1C(DAL_3);

D_0_(D_0) = NR3A(DAL_0,DA_1,DA_2);
BY_2_(BY_2) = ND3A(DAL_2,DA_1,DAL_0);
BY_3_(BY_3) = ND4A(DAL_2,DAL_3,DA_0,DA_1);
BY_4_(BY_4) = ND4A(DAL_3,DA_2,DAL_0,DAL_1);
BY_5_(BY_5) = ND3A(DA_2,DAL_1,DA_0);
BY_6_(BY_6) = ND3A(DA_1,DA_2,DAL_0);
BY_7_(BY_7) = ND3A(DA_0,DA_1,DA_2);
BY_8_(BY_8) = ND4A(DA_3,DAL_0,DAL_1,DAL_2);
BY_9_(BY_9) = ND4A(DA_3,DAL_1,DAL_2,DA_0);
BY_12_(BY_12) = ND4A(DA_2,DA_3,DAL_0,DAL_1);
AB9_0_(AB9_0) = ND3A(DA_3,DAL_2,DA_1);
AB9_1_(AB9_1) = ND3A(DA_3,DAL_2,DA_0);
AB9_(AB9) = ND2A(AB9_0,AB9_1);
AB9L_(AB9L) = N1C(AB9);

D_1_(D_1) = ND2A(BY_2,BY_9);
D_2_(D_2) = ND2A(BY_3,AB9L);
D_3_(D_3) = ND2A(BY_4,AB9L);
D_4_(D_4) = ND2A(BY_5,AB9L);
D_5_(D_5) = ND2A(BY_6,AB9L);
D_6_(D_6) = ND2A(BY_7,AB9L);
D_7_(D_7) = ND2A(BY_8,AB9L);
D_15_(D_15) = ND2A(BY_12,AB9L);

DD_0_(DD_0) = BTS4B(D_0,CON);
DD_1_(DD_1) = BTS4B(D_1,ASS_1);
DD_2_(DD_2) = BTS4B(D_2,ASS_1);
DD_3_(DD_3) = BTS4B(D_3,ASS_1);
DD_4_(DD_4) = BTS4B(D_4,ASS_4);
DD_5_(DD_5) = BTS4B(D_5,ASS_5);
DD_6_(DD_6) = BTS4B(D_6,ASS_5);
DD_7_(DD_7) = BTS4B(D_7,ASS_7);
DD_8_(DD_8) = BTS5B(AB9L,ASS_8);
DD_9_(DD_9) = BTS5B(AB9L,ASS_9);
DD_10_(DD_10) = BTS5B(AB9L,ASS_9);
DD_11_(DD_11) = BTS5B(AB9L,ASS_9);
DD_12_(DD_12) = BTS5B(AB9L,ASS_12);
DD_13_(DD_13) = BTS5B(AB9L,ASS_12);
DD_14_(DD_14) = BTS5B(AB9L,ASS_12);
DD_15_(DD_15) = BTS4B(D_15,ASS_12);

CONL_(CONL) = NR2C(CONEN,RESET);
CON_(CON) = N1A(CONL);
/* Use these decodes for asserting unused bits of other DSP locations
   to keep the internal bus driven */
ASS_1_(ASS_1) = ND2A(GPRDL,CONL);
ASS_4_(ASS_4) = ND3A(GPRDL,DMA1RDL,CONL);
ASS_5_(ASS_5) = ND4A(GPRDL,DMA1RDL,MZ2RDL,CONL);
ASS_7_(ASS_7) = ND6A(GPRDL,DMA1RDL,MZ2RDL,MODRDL,NOCONL,CONL);
ASS_8_(ASS_8) = ND6A(GPRDL,MZ2RDL,PCRDL,MODRDL,NOCONL,CONL);
ASS_9_(ASS_9) = ND8A(GPRDL,TRARDL,IXRDL,MZ2RDL,PCRDL,MODRDL,NOCONL,CONL);
ASS_12_(ASS_12) = ND3A(REGRDL,NOCONL,CONL);
REGRDL_(REGRDL) = N1A(REGRD);
END MODULE;

MODULE FILL;

INPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,A_0,A_1,A_2,A_3,A_4,A_5,A_6,ENAB;
OUTPUTS	DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6;
LEVEL FUNCTION;
DEFINE

D_0_(DD_0) = BTS4B(A_0,ENAB);
D_1_(DD_1) = BTS4B(A_1,ENAB);
D_2_(DD_2) = BTS4B(A_2,ENAB);
D_3_(DD_3) = BTS4B(A_3,ENAB);
D_4_(DD_4) = BTS4B(A_4,ENAB);
D_5_(DD_5) = BTS4B(A_5,ENAB);
D_6_(DD_6) = BTS4B(A_6,ENAB);
END MODULE;

END COMPILE;
END;
