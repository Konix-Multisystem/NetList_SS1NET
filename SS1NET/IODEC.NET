COMPILE;
DIRECTORY MASTER;
/********************************************************
*	iodec-hdl					*
*	25/10/88					*
********************************************************/

/*
This module is the io decode in the SLIPSTREAM chip on the ACW
*/



MODULE IODEC;

INPUTS	RESETL_0,CLK,IOML,VRD,VWR,A_0,A_1,A_2,A_3,A_4,A_5,A_6,A_7;
OUTPUTS	IORDL,IOWRL,BCSL,JOYL_0,JOYL_1,JOYL_2,SSIORD,INTL,INTH,STARTL,STARTH,
   HCNTL,HCNTH,VCNTL,VCNTH,SCRL_0,SCRL_1,SCRL_2,MODE,BORDL,BORDH,TRANS,MASK,
   INDEX,ENDL,ENDH,MEMLD,DIAGL_0,DIAG_1,LPL_0,LPL_1,LPL_2,LPL_3,STATL,LCD,ACK,
   DIS,GPIOL_0,GPIOL_1;
LEVEL FUNCTION;
DEFINE

RESET_(RESET) = N1A(RESETL_0);
RESETL_(RESETL) = N1B(RESET);

/* generate an IO write strobe */

IOM_(IOM) = N1A(IOML);
IOWRL_0_(IOWRL) = ND2A(IOM,VWR);

/* generate the IO read strobe */

IORDL_(IORDL) = ND2A(IOM,VRD);

/* generate vid and blitter 'chip' selects */
/* Vid appears between 0-1fh, Blitter between 20h-3fh */

AL_0_(AL_0) = N1C(A_0);
AL_1_(AL_1) = N1C(A_1);
AL_2_(AL_2) = N1C(A_2);
AL_3_(AL_3) = N1C(A_3);
AL_4_(AL_4) = N1C(A_4);
AL_5_(AL_5) = N1C(A_5);
AL_6_(AL_6) = N1C(A_6);
VCS_(VCS) = NR4A(A_5,A_6,A_7,IOML);
VCSL_(VCSL) = N1A(VCS);
BCS_(BCS) = NR4A(AL_5,A_6,A_7,IOML);
BCSL_(BCSL) = N1A(BCS);

/* joysticks appear between 40h-4fh and 50h-5fh */

JOYL_0_(JOYL_0) = OR5A(A_4,A_5,AL_6,A_7,IORDL);
JOYL_1_(JOYL_1) = OR5A(AL_4,A_5,AL_6,A_7,IORDL);
JOYL_2_(JOYL_2) = OR5A(A_4,A_5,AL_6,A_7,IOWRL);

/* The general purpose IO decodes are between 60h-6fh and 70h-7fh */

RDWR_(RDWR) = OR2A(VWR,VRD);
IORWL_(IORWL) = ND2A(RDWR,IOM);
GPIOL_0_(GPIOL_0) = OR5A(A_4,AL_5,AL_6,A_7,IORWL);
GPIOL_1_(GPIOL_1) = OR5A(AL_4,AL_5,AL_6,A_7,IORWL);

/* ssiord is asserted during slipstream IO reads..ie vid and blit */

SSIOL_(SSIOL) = NR2A(BCS,VCS);
VRDL_(VRDL) = N1A(VRD);
SSIORD_(SSIORD) = NR2A(SSIOL,VRDL);

/* now generate the individual decodes */

RDEC_0_(RDEC_0) = NR2C(VCSL,VRDL);
WDEC_0_(WDEC_0) = NR4C(VCSL,A_3,A_4,IOWRL);
WDEC_1_(WDEC_1) = NR4C(VCSL,AL_3,A_4,IOWRL);
WDEC_2_(WDEC_2) = NR4C(VCSL,A_3,AL_4,IOWRL);

LPL_0_(LPL_0) = ND4A(RDEC_0,AL_0,AL_1,AL_2);
LPL_1_(LPL_1) = ND4A(RDEC_0,A_0,AL_1,AL_2);
LPL_2_(LPL_2) = ND4A(RDEC_0,AL_0,A_1,AL_2);
LPL_3_(LPL_3) = ND4A(RDEC_0,A_0,A_1,AL_2);
STATL_(STATL) = ND2A(RDEC_0,A_2);

INTLL_(INTL) = N4AND(RESETL,WDEC_0,AL_0,AL_1,AL_2);
INTHL_(INTH) = N4AND(RESETL,WDEC_0,A_0,AL_1,AL_2);
STARTLL_(STARTL) = N4AND(RESETL,WDEC_0,AL_0,A_1,AL_2);
STARTHL_(STARTH) = N4AND(RESETL,WDEC_0,A_0,A_1,AL_2);
HCNTLL_(HCNTL) = N4AND(RESETL,WDEC_0,AL_0,AL_1,A_2);
HCNTHL_(HCNTH) = N4AND(RESETL,WDEC_0,A_0,AL_1,A_2);
VCNTLL_(VCNTL) = N4AND(RESETL,WDEC_0,AL_0,A_1,A_2);
VCNTHL_(VCNTH) = N4AND(RESETL,WDEC_0,A_0,A_1,A_2);

SCRLL_0_(SCRL_0) = N4AND(RESETL,WDEC_1,AL_0,AL_1,AL_2);
SCRLL_1_(SCRL_1) = N4AND(RESETL,WDEC_1,A_0,AL_1,AL_2);
SCRLL_2_(SCRL_2) = N4AND(RESETL,WDEC_1,AL_0,A_1,AL_2);
ACKL_(ACK) = N4AND(RESETL,WDEC_1,A_0,A_1,AL_2);
MODEL_(MODE) = N4AND(RESETL,WDEC_1,AL_0,AL_1,A_2);
BORDLL_(BORDL) = N4AND(RESETL,WDEC_1,A_0,AL_1,A_2);
BORDHL_(BORDH) = N4AND(RESETL,WDEC_1,AL_0,A_1,A_2);
MASKL_(MASK) = N4AND(RESETL,WDEC_1,A_0,A_1,A_2);

INDEXL_(INDEX) = N4AND(RESETL,WDEC_2,AL_0,AL_1,AL_2);
ENDLL_(ENDL) = N4AND(RESETL,WDEC_2,A_0,AL_1,AL_2);
ENDHL_(ENDH) = N4AND(RESETL,WDEC_2,AL_0,A_1,AL_2);
MEML_(MEMLD) = N4AND(RESETL,WDEC_2,A_0,A_1,AL_2);
LCDL_(LCD) = N4AND(RESETL,WDEC_2,AL_0,AL_1,A_2);
DIAGL_0_(DIAGL_0) = ND4A(WDEC_2,A_0,AL_1,A_2);
DIAGL_1_(DIAG_1) = ND2C(RESETL,DIAGL_0);
DISL_(DIS) = N4AND(RESETL,WDEC_2,AL_0,A_1,A_2);
TRANSL_(TRANS) = N4AND(RESETL,WDEC_2,A_0,A_1,A_2);

/* NB diagL[0] is not asserted during reset, diag[1] is! */

END MODULE;

MODULE N4AND;

INPUTS	R,A,B,C,D;
OUTPUTS	Q;
LEVEL FUNCTION;
DEFINE

E_(E) = ND4A(A,B,C,D);
Q_(Q) = ND2C(E,R);

END MODULE;

END COMPILE;
END;
