COMPILE;
DIRECTORY MASTER;


MODULE DSP;

INPUTS	A_0,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,A_9,A_10,A_11,A_12,A_13,A_14,A_15,
   A_16,A_17,A_18,A_19,D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,D_8,D_9,D_10,D_11,D_12,
   D_13,D_14,D_15,DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,
   DD_12,DD_13,DD_14,DD_15,PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,PD_8,PD_9,
   PD_10,PD_11,PD_12,PD_13,PD_14,PD_15,RESETL,DSPBAKL,DCSL,CCLK,WAITL,IOML,RDL,
   DWE,AZ_0,AZ_1,AZ_2,AZ_3,AZ_4,AZ_5,AZ_6,AZ_7,AZ_8,AZ_9,AZ_10,AZ_11,AZ_12,
   AZ_13,AZ_14,AZ_15,COUTL,MZ_0,MZ_1,MZ_2,MZ_3,MZ_4,MZ_5,MZ_6,MZ_7,MZ_8,MZ_9,
   MZ_10,MZ_11,MZ_12,MZ_13,MZ_14,MZ_15,MZ_16,MZ_17,MZ_18,MZ_19,MZ_20,MZ_21,
   MZ_22,MZ_23,MZ_24,MZ_25,MZ_26,MZ_27,MZ_28,MZ_29,MZ_30,MZ_31,MZ_32,MZ_33,
   MZ_34,MZ_35,MZ_36,INPUT,DQCLK;
OUTPUTS	A_0,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,A_9,A_10,A_11,A_12,A_13,A_14,A_15,
   A_16,A_17,A_18,A_19,D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,D_8,D_9,D_10,D_11,D_12,
   D_13,D_14,D_15,DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,
   DD_12,DD_13,DD_14,DD_15,PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,PD_8,PD_9,
   PD_10,PD_11,PD_12,PD_13,PD_14,PD_15,DSPBRQL,LEFTL,LEFTH,RIGHTL,RIGHTH,MREQ,
   RD,WR,WORD,PC_0,PC_1,PC_2,PC_3,PC_4,PC_5,PC_6,PC_7,DA_0,DA_1,DA_2,DA_3,DA_4,
   DA_5,DA_6,DA_7,PRAMEN,PRAMWR,DRAMEN,DRAMWR,ROMEN,X_0,X_1,X_2,X_3,X_4,X_5,X_6,
   X_7,X_8,X_9,X_10,X_11,X_12,X_13,X_14,X_15,ACC_0,ACC_1,ACC_2,ACC_3,ACC_4,
   ACC_5,ACC_6,ACC_7,ACC_8,ACC_9,ACC_10,ACC_11,ACC_12,ACC_13,ACC_14,ACC_15,
   ACC_16,ACC_17,ACC_18,ACC_19,ACC_20,ACC_21,ACC_22,ACC_23,ACC_24,ACC_25,ACC_26,
   ACC_27,ACC_28,ACC_29,ACC_30,ACC_31,ACC_32,ACC_33,ACC_34,ACC_35,TCX,TCY,CINL,
   M,S_0,S_1,S_2,S_3,OUTPUT;
LEVEL FUNCTION;
DEFINE


PC_(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,PC_0,PC_1,PC_2,PC_3,PC_4,PC_5,PC_6,
   PC_7) = PC(DDB_0,DDB_1,DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,RUN,RESETKL,CCLK,PCRDL,
   PCWRL,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,HPCWRL);

PWMLEFT_(LEFTL,LEFTH) = PWM(LEFTDACWRL,CCLK,DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,DDB_8,
   DDB_9,DDB_10,DDB_11,DDB_12,DDB_13,DDB_14,DDB_15);

PWMRIGHT_(RIGHTL,RIGHTH) = PWM(RTDACWRL,CCLK,DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,DDB_8,
   DDB_9,DDB_10,DDB_11,DDB_12,DDB_13,DDB_14,DDB_15);

DMA_(A_0,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,A_9,A_10,A_11,A_12,A_13,A_14,A_15,A_16,
   A_17,A_18,A_19,D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,D_8,D_9,D_10,D_11,D_12,D_13,
   D_14,D_15,DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,
   DD_12,DD_13,DD_14,DD_15,DSPBRQL,MREQ,RD,WR,WORD) = DMA(A_0,A_1,A_2,A_3,A_4,
   A_5,A_6,A_7,A_8,A_9,A_10,A_11,A_12,A_13,A_14,A_15,A_16,A_17,A_18,A_19,D_0,
   D_1,D_2,D_3,D_4,D_5,D_6,D_7,D_8,D_9,D_10,D_11,D_12,D_13,D_14,D_15,DDB_0,DDB_1,
   DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,DDB_8,DDB_9,DDB_10,DDB_11,DDB_12,DDB_13,DDB_14,DDB_15,
   DMA0WRL,DMA0RDL,DMA1WRL,DMA1RDL,DMDWRL,DMDRDL,DSPBAKL,WAITL,RUN,RESETKL,
   CCLK,DQCLK);


PRAM_(PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,PD_8,PD_9,PD_10,PD_11,PD_12,PD_13,
   PD_14,PD_15,D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,HPCWRL,PRAMEN,
   PRAMWR) = PRAM(PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,PD_8,PD_9,PD_10,PD_11,
   PD_12,PD_13,PD_14,PD_15,D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,A_0,A_9,A_10,DCSL,
   RDL,DWEL,RUN,CCLK,DQCLK);

DRAM_(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,DD_13,
   DD_14,DD_15,REGS,DRAMEN,DRAMWR,ROMEN,OUTPUT) = DRAM(DD_0,DD_1,DD_2,DD_3,DD_4,
   DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,DD_13,DD_14,DD_15,DA_0,DA_1,DA_2,
   DA_3,DA_4,DA_5,DA_6,DA_7,DA_8,DAL_4,DAL_5,DAL_6,DAL_8,READL,WRITEL,TRARDL,
   IXRDL,DAC,DMA1RDL,MZ2RDL,PCRDL,MODRDL,GPRDL,GPWRL,RESETKL,CCLK,DQCLK,INPUT);

ADDRESS_(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DA_0,DA_1,DA_2,DA_3,DA_4,
   DA_5,DA_6,DA_7,DA_8,DAL_0,DAL_1,DAL_2,DAL_3,DAL_4,DAL_5,DAL_6,
   DAL_8) = ADDRESS(DDB_0,DDB_1,DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,DDB_8,PD_0,PD_1,PD_2,
   PD_3,PD_4,PD_5,PD_6,PD_7,PD_8,ASEL_0,ASEL_1,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,
   A_9,CCLK,DQCLK,RESETKL,IXWRL,IXRDL,TRARDL,INTRALDL);

INSTRUCT_(PCRDL,PCWRL,LEFTDACWRL,RTDACWRL,ASEL_0,ASEL_1,IXWRL,IXRDL,TRARDL,
   MODWRL,MODRDL,XWRL,XRDL,ZWRL,ZRDL,RESWRL,CARRYWRL,MZ0RDL,MZ1RDL,MZ2RDL,
   MZ0WRL,MZ1WRL,MZ2WRL,MULTL,MACL,WITHCYL,SUB,DMA0WRL,DMA1WRL,DMDWRL,DMDRDL,
   INTRUD,PDK_11,PDK_12,PDK_14,PDKL_11,PDKL_12,PDKL_13,PDKL_14,READL,WRITEL,
   CCFL,DMA0RDL,DMA1RDL,GPRDL,GPWRL,DAC) = INSTRUCT(PD_9,PD_10,PD_11,PD_12,
   PD_13,PD_14,PD_15,DA_0,DA_1,DA_2,DA_3,DAL_0,DAL_1,DAL_2,DAL_3,REGS,RUN,
   RUNANT,CCLK,RESETKL,CARRY,TRURD);

ALU_(DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,DD_13,
   DD_14,DD_15,CARRY,X_0,X_1,X_2,X_3,X_4,X_5,X_6,X_7,X_8,X_9,X_10,X_11,X_12,
   X_13,X_14,X_15,ACC_0,ACC_1,ACC_2,ACC_3,ACC_4,ACC_5,ACC_6,ACC_7,ACC_8,ACC_9,
   ACC_10,ACC_11,ACC_12,ACC_13,ACC_14,ACC_15,ACC_16,ACC_17,ACC_18,ACC_19,ACC_20,
   ACC_21,ACC_22,ACC_23,ACC_24,ACC_25,ACC_26,ACC_27,ACC_28,ACC_29,ACC_30,ACC_31,
   ACC_32,ACC_33,ACC_34,ACC_35,TCX,TCY,CINL,M,S_0,S_1,S_2,S_3) = ALU(DDB_0,DDB_1,
   DDB_2,DDB_3,DDB_4,DDB_5,DDB_6,DDB_7,DDB_8,DDB_9,DDB_10,DDB_11,DDB_12,DDB_13,DDB_14,DDB_15,
   XWRL,XRDL,ZWRL,ZRDL,RESWRL,CARRYWRL,MZ0RDL,MZ1RDL,MZ2RDL,MZ0WRL,MZ1WRL,
   MZ2WRL,MODWRL,MODRDL,MULTL,MACL,WITHCYL,SUB,PDK_11,PDK_12,PDK_14,PDKL_11,
   PDKL_12,PDKL_13,PDKL_14,CCFL,CCLK,RESETKL,MZ_0,MZ_1,MZ_2,MZ_3,MZ_4,MZ_5,MZ_6,
   MZ_7,MZ_8,MZ_9,MZ_10,MZ_11,MZ_12,MZ_13,MZ_14,MZ_15,MZ_16,MZ_17,MZ_18,MZ_19,
   MZ_20,MZ_21,MZ_22,MZ_23,MZ_24,MZ_25,MZ_26,MZ_27,MZ_28,MZ_29,MZ_30,MZ_31,
   MZ_32,MZ_33,MZ_34,MZ_35,MZ_36,AZ_0,AZ_1,AZ_2,AZ_3,AZ_4,AZ_5,AZ_6,AZ_7,AZ_8,
   AZ_9,AZ_10,AZ_11,AZ_12,AZ_13,AZ_14,AZ_15,COUTL,DQCLK);

INTRUDE_(D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,DD_0,DD_1,DD_2,DD_3,DD_4,DD_5,DD_6,
   DD_7,DD_8,DD_9,DD_10,DD_11,DD_12,DD_13,DD_14,DD_15,RUN,RUNANT,TRURD,
   INTRALDL) = INTRUDE(D_0,D_1,D_2,D_3,D_4,D_5,D_6,D_7,DDB_0,DDB_1,DDB_2,DDB_3,DDB_4,
   DDB_5,DDB_6,DDB_7,DDB_8,DDB_9,DDB_10,DDB_11,DDB_12,DDB_13,DDB_14,DDB_15,A_0,A_9,A_10,
   DCSL,RDL,DWEL,INTRUD,CCLK,DQCLK,RESETKL);

/* Synchronise reset to keep defined coming out of reset */

RESETK_(RESETKL,RESETK) = FD2A(RESETL,CCLK,RESETL);



WRITE1_(DWEL) = B1A(DWE);

/* This isn't necessary and LSI logic will rub it out anyway, but it keeps
	Qudos happy and I don't have to change anyone else's logic */
IOM_(IOM) = N1A(IOML);

DDB_0_(DDB_0) = B3A(DD_0);
DDB_1_(DDB_1) = B3A(DD_1);
DDB_2_(DDB_2) = B3A(DD_2);
DDB_3_(DDB_3) = B3A(DD_3);
DDB_4_(DDB_4) = B3A(DD_4);
DDB_5_(DDB_5) = B3A(DD_5);
DDB_6_(DDB_6) = B3A(DD_6);
DDB_7_(DDB_7) = B3A(DD_7);
DDB_8_(DDB_8) = B3A(DD_8);
DDB_9_(DDB_9) = B3A(DD_9);
DDB_10_(DDB_10) = B3A(DD_10);
DDB_11_(DDB_11) = B3A(DD_11);
DDB_12_(DDB_12) = B3A(DD_12);
DDB_13_(DDB_13) = B3A(DD_13);
DDB_14_(DDB_14) = B3A(DD_14);
DDB_15_(DDB_15) = B3A(DD_15);

END MODULE;





END COMPILE;
END;
